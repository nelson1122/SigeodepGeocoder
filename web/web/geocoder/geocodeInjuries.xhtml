<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html">
    <h:head>
        <title>Facelet Title</title>
        <h:outputScript name="js/OpenLayers.js"/>
        <h:outputScript name="js/heatmap.js"/>
        <script src="http://maps.google.com/maps/api/js?sensor=false"/>
        
    </h:head>
    <h:body>

        <script type="text/javascript">

            var map, gmaps, osm, heat;
            var featurecollection, injuriesLayer;
            var boxLayer, box;

            $(function () {

                map = new OpenLayers.Map('fatalInjuriesMap');

                gmaps = new OpenLayers.Layer.Google(
                        "Google Hybrid",
                        {
                            type: google.maps.MapTypeId.HYBRID,
                            numZoomLevels: 20
                        }
                );

                osm = new OpenLayers.Layer.OSM();

                //AGREGO LA CAPA DE PUNTOS
                featurecollection = #{injuriesCountMB.fatalInjuriesFeatures};

                var geojson_format = new OpenLayers.Format.GeoJSON();
                var injuriesLayer = new OpenLayers.Layer.Vector('Puntos', {
                    strategies: [new OpenLayers.Strategy.Fixed()]
                });
                injuriesLayer.addFeatures(geojson_format.read(featurecollection));


                //AGREGO EL MAPA DE CALOR
                heat = new Heatmap.Layer("Heatmap");

                for (var i = 0; i &lt; featurecollection.features.length; i++) {
                    var x = featurecollection.features[i].geometry.coordinates[0];
                    var y = featurecollection.features[i].geometry.coordinates[1];
                    heat.addSource(new Heatmap.Source(
                            new OpenLayers.LonLat(x, y).transform(new OpenLayers.Projection("EPSG:3857")))
                            );
                }

                heat.defaultIntensity = 0.5;
                heat.defaultRadius = 10;
                heat.setOpacity(0.7);
                heat.redraw();
                heat.setVisibility(true);
                injuriesLayer.setVisibility(false);

                //CREO LA CAPA PARA SELECCIONAR AREA
                boxLayer = new OpenLayers.Layer.Vector("Box layer");

                box = new OpenLayers.Control.DrawFeature(
                        boxLayer,
                        OpenLayers.Handler.RegularPolygon, {
                            handlerOptions: {
                                sides: 4,
                                irregular: true
                            },
                            callbacks: {
                                done: doneHandler
                            }

                        }
                );

                //AGREGO LAYERS Y CONFIGURO EL MAPA
                map.addLayers([osm, gmaps, injuriesLayer, heat, boxLayer]);
                map.addControl(new OpenLayers.Control.LayerSwitcher());
                map.addControl(box);
                box.deactivate();

                map.setBaseLayer(gmaps);

                map.setCenter(new OpenLayers.LonLat(-77.280, 1.21289).transform(
                        new OpenLayers.Projection("EPSG:4326"),
                        map.getProjectionObject()
                        ), 14);
            });

            // called when the feature is complete (double-clicked)
            function doneHandler(lineGeom) {
                //alert("DONE:" + lineGeom.getVertices());
                document.getElementById("formInjuries:txtCoordinates").value = lineGeom.getVertices();
            }

            //activar/desactivar la seleccion de area
            function activate() {
                if (box.deactivate() === false) {
                    box.activate();
                }
            }


        </script>


    </h:body>
</html>

